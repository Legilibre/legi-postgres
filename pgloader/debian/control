Source: pgloader
Section: database
Priority: optional
Maintainer: Dimitri Fontaine <dim@tapoueh.org>
Uploaders: Christoph Berg <myon@debian.org>
Build-Depends:
 buildapp (>= 1.5),
 cl-abnf,
 cl-alexandria,
 cl-asdf (>= 3.0.3),
 cl-asdf-finalizers,
 cl-asdf-system-connections,
 cl-bordeaux-threads (>= 0.8.3),
 cl-cffi (>= 1:0.12.0),
 cl-command-line-arguments,
 cl-csv,
 cl-db3,
 cl-drakma,
 cl-esrap,
 cl-fad,
 cl-flexi-streams,
 cl-interpol,
 cl-ixf,
 cl-local-time,
 cl-log,
 cl-lparallel,
 cl-markdown,
 cl-md5,
 cl-metabang-bind,
 cl-mssql,
 cl-mustache,
 cl-postmodern,
 cl-ppcre,
 cl-py-configparser,
 cl-qmynd,
 cl-quri,
 cl-simple-date,
 cl-split-sequence,
 cl-sqlite,
 cl-trivial-backtrace,
 cl-trivial-utf-8,
 cl-unicode,
 cl-usocket,
 cl-utilities,
 cl-uuid,
 cl-yason,
 cl-zs3,
 debhelper (>= 9.0.0),
 gawk,
 help2man,
 python3-sphinx,
 sbcl (>= 1.1.13),
 tzdata,
Standards-Version: 4.1.4
Homepage: https://github.com/dimitri/pgloader
Vcs-Git: https://github.com/dimitri/pgloader.git
Vcs-Browser: https://github.com/dimitri/pgloader

Package: pgloader
Architecture: any
Depends: freetds-dev, ${misc:Depends}, ${shlibs:Depends}, ${ssl:Depends}
Description: extract, transform and load data into PostgreSQL
 pgloader imports data from different kind of sources and COPY it into
 PostgreSQL.
 .
 The command language is described in the manual page and allows one to
 describe where to find the data source, its format, and to describe data
 processing and transformation.
 .
 Supported source formats include CSV, fixed width flat files, dBase3 files
 (DBF), and SQLite and MySQL databases. In most of those formats, pgloader
 is able to auto-discover the schema and create the tables and the indexes
 in PostgreSQL. In the MySQL case it's possible to edit CASTing rules from
 the pgloader command directly.

Package: cl-pgloader
Section: lisp
Architecture: all
Depends:
 cl-abnf,
 cl-alexandria,
 cl-asdf (>= 3.0.3),
 cl-asdf-finalizers,
 cl-asdf-system-connections,
 cl-bordeaux-threads (>= 0.8.3),
 cl-cffi (>= 1:0.12.0),
 cl-command-line-arguments,
 cl-csv,
 cl-db3,
 cl-drakma,
 cl-esrap,
 cl-fad,
 cl-flexi-streams,
 cl-interpol,
 cl-ixf,
 cl-local-time,
 cl-log,
 cl-lparallel,
 cl-markdown,
 cl-md5,
 cl-metabang-bind,
 cl-mssql,
 cl-mustache,
 cl-postmodern,
 cl-ppcre,
 cl-py-configparser,
 cl-qmynd,
 cl-quri,
 cl-simple-date,
 cl-split-sequence,
 cl-sqlite,
 cl-trivial-backtrace,
 cl-trivial-utf-8,
 cl-unicode,
 cl-usocket,
 cl-utilities,
 cl-uuid,
 cl-yason,
 cl-zs3,
 ${misc:Depends},
Description: extract, transform and load data into PostgreSQL
 pgloader imports data from different kind of sources and COPY it into
 PostgreSQL.
 .
 The command language is described in the manual page and allows one to
 describe where to find the data source, its format, and to describe data
 processing and transformation.
 .
 Supported source formats include CSV, fixed width flat files, dBase3 files
 (DBF), and SQLite and MySQL databases. In most of those formats, pgloader
 is able to auto-discover the schema and create the tables and the indexes
 in PostgreSQL. In the MySQL case it's possible to edit CASTing rules from
 the pgloader command directly.
